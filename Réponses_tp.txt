==== Question 1 ====

MainWidget regroupe l'ensemble des fonctions permettant à Qt et OpenGL de paramétrer la fenêtre, les interactions utilisateurs, et l'environnement OpenGL.

GeometryEngine gère l'envoi des informations au Vertex Buffers, et permet l'affichage de la scène.

Les Fragment et Vertex Shaders fournis sont les fichiers de base pour un simple passthrough. En commentaire j'ai bidouillé un shader "Vieux Moniteur TV". Attention au maux de têtes!

==== Question 2 ====

La fonction init envoie les différentes positions des vertex ainsi que les IDs de ces à utiliser lors du rendu de la scène.

La fonction draw récupère ces données, les envoies au contexte OpenGL, et OpenGL se charge de l'affichage.

==== Question 3 & 4 ====

Voir code. Déplacements avec "ZQSD" et "AE" pour régler la hauteur.

==== Bonus ====

Lumières:
Après avoir essayé les fonctions OpenGL ES 1.1 de lumières...

/*
    // Lighting test

    GLfloat mat_specular[] = { 1.0, 0.0, 1.0, 1.0 };
    GLfloat mat_shininess[] = { 50.0 };
    GLfloat light_position[] = { -5.0, -5.0, -5.0, 0.0 };
    glClearColor (0.0, 0.1, 0.0, 0.0);
    glShadeModel (GL_SMOOTH);

    glMaterialfv(GL_FRONT, GL_SPECULAR, mat_specular);
    glMaterialfv(GL_FRONT, GL_SHININESS, mat_shininess);
    glLightfv(GL_LIGHT0, GL_POSITION, light_position);

    GLfloat light_ambient[] = { 1.0, 0.0, 0.0, 1.0 };
    GLfloat light_diffuse[] = { 1.0, 0.0, 0.0, 1.0 };
    GLfloat light_specular[] = { 1.0, 0.0, 0.0, 1.0 };

    glLightfv(GL_LIGHT0, GL_AMBIENT, light_ambient);
    glLightfv(GL_LIGHT0, GL_DIFFUSE, light_diffuse);
    glLightfv(GL_LIGHT0, GL_SPECULAR, light_specular);
    glLightfv(GL_LIGHT0, GL_POSITION, light_position);

    glEnable(GL_LIGHTING);
    glEnable(GL_LIGHT0);
    glEnable(GL_DEPTH_TEST);


    // End of Lighting test

*/

... Sans succès, j'en conclut que les lumières se feront via shaders.

Pour ce qui est de la texturation, il sera nécessaire de créer un atlas de textures, et de faire varier les UVs en fonction du paramètre Z, dans le cas de la texturation de terrain par hauteur.